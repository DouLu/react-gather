{"version":3,"sources":["serviceWorker.js","components/Card/index.js","pages/home/index.js","utils/index.js","pages/dnd/index.js","components/Upload/crop.js","components/Upload/index.js","pages/plant/index.js","components/CSS/index.js","Router.js","Layout.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","state","isHover","this","name","id","devices","apps","merbers","createTime","proNum","numbers","style","width","height","border","onMouseEnter","setState","onMouseLeave","text","onCopy","message","success","color","display","justifyContent","map","item","key","Component","defaultProps","card_props","Home","ThreeLevelProvinceData","province","pro","proData","title","value","children","city","pCity","cityData","county","cc","PROVINCE","CITY","pid","COUNTY","cid","console","log","_","flatMapDeep","DragDemo","data","weatherinfo","apiUrl","origin","fetch","then","res","json","catch","error","response","e","api","code","weather","className","img1","split","img2","ptime","temp1","temp2","showSearch","placeholder","treeData","onChange","label","getWeather","mode","theme","JSON","stringify","dataSource","CropBox","imgRef","React","createRef","img","document","createElement","src","sourceImg","current","appendChild","cropper","Cropper","aspectRatio","viewMode","getCroppedCanvas","toDataURL","ref","Upload","upload","self","File","inputRef","files","test","type","FileReader","reader","readAsDataURL","onload","imgFile","target","result","visible","imageURL","URL","webkitURL","createObjectURL","handleOk","cropperImg","childRef","getData","onUpload","handleCancel","accept","onClick","click","hidden","alt","destroyOnClose","onOk","onCancel","getReqSign","params","app_id","time_stamp","Date","parse","nonce_str","key1","key2","sign","newParams","sdic","Object","keys","sort","forEach","index","str","encodeURI","md5","toUpperCase","KnowPlant","imgData","image","baike_num","formData","FormData","append","access_token","fetchPolyfill","method","body","headers","Headers","dataJson","ocr_params","ocrFormData","CSS","routerConfig","path","content","iconType","Header","Layout","Sider","Content","AppLayout","collapsed","toggle","renderMenu","config","defaultSelectedKeys","Item","to","renderContent","exact","component","trigger","collapsible","flex","overflow","background","padding","margin","minHeight","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4d54706.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { message } from 'antd';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isHover: false };\n  }\n\n  render() {\n    const { isHover } = this.state;\n    const { name, id, devices, apps, merbers, createTime } = this.props;\n    const proNum = [\n      {\n        name: '设备产品',\n        numbers: devices || '-'\n      },\n      {\n        name: 'APP',\n        numbers: apps || '-'\n      },\n      {\n        name: '成员数',\n        numbers: merbers || '-'\n      },\n    ];\n    return (\n      <div\n        style={{ width: '320px', height: '211px', border: 'solid 1px #eee' }}\n        onMouseEnter={() => this.setState({ isHover: true })}\n        onMouseLeave={() => this.setState({ isHover: false })}\n      >\n        <h1>{name}</h1>\n        <p>\n          <span>ID:{id}</span>\n          {isHover && <CopyToClipboard text={id} onCopy={() => { message.success('复制成功！', 1) }}><span style={{ color: '#0FC18A' }}>复制ID</span></CopyToClipboard>}\n        </p>\n        <div style={{ display: 'flex', justifyContent: 'space-between', }}>\n          {\n            proNum.map(item => <div key={item.name}>\n              <p>{item.name}</p>\n              <p>{item.numbers}</p>\n            </div>)\n          }\n        </div>\n        <p>创建时间：{createTime}</p>\n      </div>\n    );\n  }\n}\n\nCard.defaultProps = {\n\n};\n\nCard.propTypes = {\n  name: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  createTime: propTypes.string.isRequired,\n};\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from '../../components/Card';\n\nconst card_props = {\n  name: '新建项目',\n  id: '1234567890',\n  devices: 10,\n  apps: 12,\n  merbers: 3,\n  createTime: '2019-09-10'\n};\nexport default class Home extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>echart.js</h1>\n        <Card {...card_props} />\n      </div>\n    );\n  }\n}","import province from '../data/province.json';\nimport city from '../data/city.json';\nimport county from '../data/county.json';\n\n// 无副作用，数组操作\nconst arrayInsert = (arr, index, newItem) => [ // 数组插入解构形式\n  ...arr.slice(0, index),\n  newItem,\n  ...arr.slice(index),\n];\n\nconst arrayRemove = (arr, index) => (arr.length === 1 ? [] : [ // 数组删除\n  ...arr.slice(0, index - 1),\n  ...arr.slice(index),\n]);\n\nconst copy = obj => JSON.parse(JSON.stringify(obj));\n\n// 三级省市县数据\nconst ThreeLevelProvinceData = province.map(pro => {\n  const proData = { title: pro.name, value: pro.id };\n  proData.children = !city[pro.id] ? [] : city[pro.id].map(pCity => {\n    const cityData = { title: pCity.name, value: pCity.id };\n    cityData.children = !county[pCity.id] ? [] : county[pCity.id].map(cc => {\n      return { title: cc.name, value: cc.id };\n    })\n    return cityData;\n  });\n  return proData;\n});\n\nconst PROVINCE = province.map(pro => ({ title: pro.name, value: pro.id }));\nconst CITY = (pid) => city[pid].map(pro => ({ title: pro.name, value: pro.id }));\nconst COUNTY = (cid) => county[cid].map(pro => ({ title: pro.name, value: pro.id }));\n\nexport {\n  arrayInsert,\n  arrayRemove,\n  copy,\n  PROVINCE,\n  CITY,\n  COUNTY,\n  ThreeLevelProvinceData,\n};\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport _ from 'lodash';\nimport './style.css';\nimport { message, TreeSelect } from 'antd';\nimport { ThreeLevelProvinceData, PROVINCE, CITY, COUNTY } from '../../utils';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/json'; // 语言包\nimport 'brace/theme/monokai'; // 主题包\nimport 'brace/ext/searchbox'; //搜索替换快捷键\n// http://securingsincity.github.io/react-ace/\n\n\nconsole.log(_.flatMapDeep([1, [2, 3], [4, [5]], 6, [7, 8]]));\n\nexport default class DragDemo extends Component {\n  static propTypes = {\n    value: propTypes.string,\n    dataSource: propTypes.array,\n  };\n  static defaultProps = {\n    value: '',\n    dataSource: [],\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      weatherinfo: null,\n      pid: null,\n      cid: null,\n      province: '',\n      city: '',\n      county: '',\n    };\n  }\n  componentDidMount() {\n    const cityCode = '101190101';\n    const apiUrl = `${window.location.origin}/data/cityinfo/${cityCode}.html`;\n    fetch(apiUrl)\n      .then(res => res.json())\n      .then(data => { this.setState({ weatherinfo: data.weatherinfo }) })\n      .catch(error => { message.error(error) })\n\n    // 省份、城市数据\n    fetch('https://os.alipayobjects.com/rmsportal/ODDwqcDFTLAguOvWEolX.json')\n      .then(response => response.json())\n      .then((data) => { this.setState({ data }) })\n      .catch(e => console.log(e));\n  }\n\n  getWeather(city) {\n    const api = `https://www.apiopen.top/weatherApi?city=${city}`;\n    fetch(api)\n      .then(res => res.json())\n      .then(data => { this.setState({ code: data.data }); })\n      .catch(error => { message.error(error) });\n  }\n\n  render() {\n    const { weatherinfo, pid, cid, province, city, county, code } = this.state;\n    return (\n      <div>\n        {weatherinfo && <div>\n          <p>城市：{weatherinfo.city}</p>\n          <p>天气：{weatherinfo.weather}</p>\n          <p>\n            <span className={`icon ${weatherinfo.img1.split('0')[0]} fl`}></span>\n            <span className={`icon ${weatherinfo.img2.split('0')[0]} fl`}></span>\n          </p>\n          <p>时间：{weatherinfo.ptime}</p>\n          <p>最低温度：{weatherinfo.temp1}</p>\n          <p>最高温度：{weatherinfo.temp2}</p>\n        </div>}\n        <div>\n          fetch data:\n         {/* <TreeSelect\n            showSearch\n            style={{ width: 160 }}\n            placeholder={'选择城市'}\n            treeData={data}\n          /> */}\n        </div>\n        <div>\n          json data:\n         <TreeSelect\n            showSearch\n            style={{ width: 160 }}\n            placeholder={'选择城市'}\n            treeData={ThreeLevelProvinceData}\n          />\n        </div>\n        <div>\n          <span>\n            省：\n            <TreeSelect onChange={(value, label) => { this.setState({ pid: value, province: label, city: '', county: '' }); this.getWeather(label); }} style={{ width: 160 }} placeholder={'选择省：'} value={province} treeData={PROVINCE} />\n          </span>\n          <span>\n            市：\n            <TreeSelect onChange={(value, label) => { this.setState({ cid: value, city: label, county: '' }); this.getWeather(label); }} style={{ width: 160 }} placeholder={'选择市：'} value={city} treeData={pid && CITY(pid)} />\n          </span>\n          <span>\n            地区：\n            <TreeSelect onChange={(value, label) => { this.setState({ county: label }); this.getWeather(label); }} style={{ width: 160 }} placeholder={'选择地区：'} value={county} treeData={cid && COUNTY(cid)} />\n          </span>\n        </div>\n        <div>\n          所选城市天气：\n          <AceEditor\n            mode=\"json\"\n            theme=\"monokai\"\n            name=\"UNIQUE_ID_OF_DIV\"\n            value={JSON.stringify(code, null, '\\t')}\n          />\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport Cropper from 'cropperjs';\nimport 'cropperjs/dist/cropper.css';\n\nexport default class CropBox extends Component {\n  static propTypes = {\n    sourceImg: propTypes.string.isRequired,\n  };\n  constructor(props) {\n    super(props);\n    this.imgRef = React.createRef();\n  }\n  componentDidMount() {\n    const img = document.createElement('img');\n    img.src = this.props.sourceImg;\n    this.imgRef.current.appendChild(img);\n    this.cropper = new Cropper(img, {\n      aspectRatio: 16 / 9,\n      viewMode: 1,\n    });\n  }\n  getData() {\n    const cas = this.cropper.getCroppedCanvas();\n    //生成base64图片的格式\n    const base64url = cas.toDataURL('image/jpeg');\n    return base64url;\n  }\n  render() {\n    const { width = 200, height = 200 } = this.props;\n    return (\n      <div>\n        <div\n          className=\"img-box\"\n          width={width}\n          height={height}\n          ref={this.imgRef}>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Modal, Button, message } from 'antd';\nimport Crop from './crop';\nimport './style.css';\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.childRef = React.createRef();\n    this.state = {\n      visible: false,\n      sourceImg: '',\n      cropperImg: null,\n    };\n  }\n  upload = () => {\n    const self = this;\n    const File = this.inputRef.current.files[0];\n    // 文件读取API\n    // https://blog.csdn.net/qq_27449993/article/details/81182889\n\n    // 图片数据格式转换\n    // http://docs.wex5.com/wex5-ui-question-list-2232/\n    if (!/image\\/\\w+/.test(File.type)) {\n      message.error(\"看清楚，这个需要图片！\");\n      return false;\n    }\n    if (typeof FileReader != 'undefined') {\n      //创建读取文件的对象\n      const reader = new FileReader();\n      //正式读取文件\n      reader.readAsDataURL(File);\n      //为文件读取成功设置事件\n      reader.onload = function (e) {\n        const imgFile = e.target.result;\n        self.setState({ visible: true, sourceImg: imgFile });\n      };\n    } else {\n      const URL = window.URL || window.webkitURL;\n      const imageURL = URL.createObjectURL(File);\n      self.setState({ visible: true, sourceImg: imageURL });\n    }\n    // 两次打开同一张图片时，第二次也可以触发onchange事件\n    this.inputRef.current.value = '';\n  }\n\n  handleOk = () => {\n    const cropperImg = this.childRef.current.getData();\n    this.setState({\n      visible: false,\n      cropperImg: cropperImg,\n    });\n    this.props.onUpload && this.props.onUpload(cropperImg);\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { title, accept, width, height, text } = this.props;\n    const { visible, sourceImg, cropperImg } = this.state;\n    return (\n      <div>\n        <Button type='primary' onClick={() => { this.inputRef.current.click() }}>\n          {text}\n          <input type='file' ref={this.inputRef} accept={accept} onChange={this.upload} hidden />\n        </Button>\n        {cropperImg && <div className='cropper-img'><img src={cropperImg} alt='img' /></div>}\n        <Modal\n          title={title}\n          width={width}\n          height={height}\n          destroyOnClose={true}\n          visible={visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <Crop ref={this.childRef} {...this.props} sourceImg={sourceImg} />\n        </Modal>\n      </div>\n    );\n  }\n};\n\nUpload.defaultProps = {\n  title: '上传图片',\n  accept: 'image/jpeg,image/png,image/gif',\n  width: 400,\n  height: 400,\n  text: '图片上传'\n};\nUpload.propTypes = {\n  title: propTypes.string,\n  width: propTypes.number,\n  height: propTypes.number,\n  accept: propTypes.string,\n  text: propTypes.string,\n  onUpload: propTypes.func,\n};\n\nexport default Upload;","import React, { Component } from 'react';\nimport Upload from '../../components/Upload';\nimport { fetch as fetchPolyfill } from 'whatwg-fetch';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/json'; // 语言包\nimport 'brace/theme/monokai'; // 主题包\nimport 'brace/ext/searchbox'; //搜索替换快捷键\n\nimport md5 from 'blueimp-md5';\n\nfunction getReqSign() {\n  // $params /* 关联数组 */, $appkey /* 字符串*/\n  const params = {\n    app_id: 2122130694,\n    time_stamp: Date.parse(new Date()),\n    nonce_str: '20e3408a79',\n    key1: '腾讯AI开放平台',\n    key2: '示例仅供参考',\n    sign: '',\n  };\n  const appkey = '3FpWut2aAfF9wO2e';\n  // 1. 字典升序排序\n  const newParams = {};\n  let sdic = Object.keys(params).sort();\n  sdic.forEach((item, index) => {\n    newParams[item] = params[sdic[index]]\n  });\n\n  // 2. 拼按URL键值对\n  let str = '';\n  // eslint-disable-next-line\n  for (const key in newParams) {\n    if (newParams[key] !== '') {\n      str += key + '=' + encodeURI(newParams[key]) + '&';\n    }\n  }\n\n  // 3. 拼接app_key\n  str += 'app_key=' + appkey;\n\n  // 4. MD5运算+转换大写，得到请求签名\n  const sign = md5(str).toUpperCase();\n  return sign;\n}\nexport default class KnowPlant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { code: null }\n  }\n  onUpload = (imgData) => {\n    // 图片需要base64编码、去掉编码头后再进行urlencode\n    const params = {\n      image: encodeURI(imgData.split('data:image/jpeg;base64,')[1]),\n      baike_num: 5 // 返回百科前五条【0-5】\n    };\n    // 1、为什么直接用fetch请求，接口返回image入参不存在\n    // 2、为什么要用formdata，直接用params也是提示入参不存在\n    const formData = new FormData();\n    formData.append('image', params.image);\n    formData.append('baike_num', params.baike_num);\n    const tokenUrl = `https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=jfSBmEOstDfsOUHqPKKZnHDV&client_secret=GchCPDPYVMnbvUmHnBPZw9Hd3o6hZRHe`;\n    fetch(tokenUrl)\n      .then(response => response.json())\n      .then((data) => {\n        console.log('token', data);\n        const { access_token } = data;\n        const api = `https://aip.baidubce.com/rest/2.0/image-classify/v1/plant?access_token=${access_token}`;\n        fetchPolyfill(api, {\n          method: 'POST',\n          body: formData, // data can be `string` or {object}! \n          headers: new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json',\n          })\n        })\n          .then(res => res.json())\n          .then(dataJson => { console.log('植物：', dataJson); this.setState({ code: dataJson }) })\n          .catch(e => console.log(e))\n      })\n      .catch(e => console.log(e));\n\n\n    // 图片文字识别\n    const ocr_params = {\n      app_id: 2122130694,\n      time_stamp: Date.parse(new Date()),\n      nonce_str: '20e3408a79',\n      sign: getReqSign(),\n      image: imgData,\n    };\n    const ocrFormData = new FormData();\n    ocrFormData.append('app_id', ocr_params.app_id);\n    ocrFormData.append('time_stamp', ocr_params.time_stamp);\n    ocrFormData.append('nonce_str', ocr_params.nonce_str);\n    ocrFormData.append('sign', ocr_params.sign);\n    ocrFormData.append('image', params.image);\n    fetchPolyfill('https://api.ai.qq.com/fcgi-bin/ocr/ocr_generalocr', {\n      method: 'POST',\n      body: ocrFormData, // data can be `string` or {object}! \n      headers: new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json',\n      })\n    })\n      .then(res => res.json())\n      .then(data => { console.log('图片文字识别', data) })\n      .catch(e => console.log(e))\n  }\n\n  render() {\n    return (<div>\n      <p>植物识别</p>\n      <Upload onUpload={this.onUpload} />\n      <div>\n        上传的植物为：\n          <AceEditor\n          mode=\"json\"\n          theme=\"monokai\"\n          name=\"UNIQUE_ID_OF_DIV\"\n          value={JSON.stringify(this.state.code, null, '\\t')}\n        />\n      </div>\n    </div>);\n  }\n}","import React, { Component } from 'react';\nimport './style.css';\nexport default class CSS extends Component {\n  render() {\n    return (\n      <div className='box'>\n        <div className='izq'></div>\n        <div className='dch'></div>\n        <h1>奇妙的 shape-outside</h1>\n        <h2>--- Cocoqiao</h2>\n        <p>Then, the frontal lobes and right hemisphere break down the intention of the speaker and look at things such as body language, tone of voice, and facial expression to interpret differences between the actual meaning of the word and this specific social context of the word.\n            And lastly, the right ventromedial prefrontal cortex makes a decision on whether or not the comment is sarcastic based off of our social and emotional interpretation.\n        Then, the frontal lobes and right hemisphere break down the intention of the speaker and look at things such as body language, tone of voice, and facial expression to interpret differences between the actual meaning of the word and this specific social context of the word.\n            And lastly, the right ventromedial prefrontal cortex makes a decision on whether or not the comment is sarcastic based off of our social and emotional interpretation.\n          Then, the frontal lobes and right hemisphere break down the intention of the speaker and look at things such as body language, tone of voice, and facial expression to interpret differences between the actual meaning of the word and this specific social context of the word.\n            And lastly, the right ventromedial prefrontal cortex makes a decision on whether or not the comment is sarcastic based off of our social and emotional interpretation.\n          Then, the frontal lobes and right hemisphere break down the intention of the speaker and look at things such as body language, tone of voice, and facial expression to interpret differences between the actual meaning of the word and this specific social context of the word.\n            And lastly, the right ventromedial prefrontal cortex makes a decision on whether or not the comment is sarcastic based off of our social and emotional interpretation.\n        </p>\n        <div className='ellipse'></div>\n        <div className='star'></div>\n      </div>\n    );\n  }\n}","import Home from './pages/home';\nimport DragDemo from './pages/dnd';\nimport Upload from './components/Upload';\nimport KnowPlant from './pages/plant';\nimport CSS from './components/CSS';\n\nexport const routerConfig = [\n  {\n    path: '/home',\n    title: 'home',\n    content: Home,\n    iconType: 'user'\n  },\n  {\n    path: '/weather',\n    title: 'weather',\n    content: DragDemo,\n    iconType: 'upload'\n  },\n  {\n    path: '/upload',\n    title: 'upload',\n    content: Upload,\n    iconType: 'upload'\n  },\n  {\n    path: '/plant',\n    title: 'plant',\n    content: KnowPlant,\n    iconType: 'upload'\n  },\n  {\n    path: '/css',\n    title: 'css',\n    content: CSS,\n    iconType: 'user'\n  },\n];","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { routerConfig } from './Router';\n\nconst { Header, Sider, Content } = Layout;\n\nexport default class AppLayout extends React.Component {\n  state = {\n    collapsed: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  renderMenu = (config) => {\n    return (\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n        {\n          config.map(item => (\n            <Menu.Item key={item.path}>\n              <Link to={item.path}>\n                <Icon type={item.iconType} />\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          ))\n        }\n      </Menu>\n    );\n  };\n\n  renderContent = (config) => {\n    return config.map(item => <Route key={item.path} path={item.path} exact component={item.content} />);\n  }\n\n  render() {\n    return (\n      <Router>\n        <Layout>\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className=\"logo\" />\n            {this.renderMenu(routerConfig)}\n          </Sider>\n          <div style={{ flex: 'auto', overflow: 'scroll' }}>\n            <Header style={{ background: '#fff', padding: 0 }}>\n              <Icon\n                className=\"trigger\"\n                type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                onClick={this.toggle}\n              />\n            </Header>\n            <Content\n              style={{\n                margin: '24px 16px',\n                padding: 24,\n                background: '#fff',\n                minHeight: 280,\n              }}\n            >\n              {this.renderContent(routerConfig)}\n            </Content>\n          </div>\n        </Layout>\n      </Router>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppLayout from './Layout';\n\nReactDOM.render(<AppLayout />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}